name: New image version in Kubernetes config

on:
  workflow_call:
    inputs:
      application-name:
        description: Name of application
        required: false
        type: string
      image-name:
        description: Name of Docker image
        required: false
        type: string
      image-version:
        description: Docker image version
        required: true
        type: string
      image-digest:
        description: Docker image digest (SHA256)
        required: true
        type: string
      kubernetes-repo:
        description: Repository for kubernetes manifests (idporten-cd | minid-cd)
        default: "idporten-cd"
        required: false
        type: string
      kubernetes-repo-event:
        description: Name of event to trigger in kubernetes repository
        default: "update-version"
        required: false
        type: string
      slack-channel-id:
        description: Team channel id
        default: ""
        required: false
        type: string

jobs:
  update-version:
    runs-on: ubuntu-latest
    env:
      REPOSITORY-NAME: ${{ github.event.repository.name }}
    steps:
      - name: Log input parameters
        run: echo ${{inputs.image-version}} - ${{inputs.image-digest}} - ${{env.IMAGE-NAME}}

      - name: Set image and application name
        run: |
          echo "IMAGE-NAME=${{ secrets.REGISTRY_URL }}/${{ inputs.image-name || env.REPOSITORY-NAME }}" >> "$GITHUB_ENV"
          echo "APPLICATION-NAME=${{ inputs.application-name || env.REPOSITORY-NAME  }}" >> "$GITHUB_ENV"

      - name: Find jira-id
        id: regex-find-jira-id
        env:
          GIT_MSG: ${{ github.event.head_commit.message }}
        run: |
          JIID=$(echo "$GIT_MSG" | head -1 |
          grep -Eo '^([a-zA-Z]{2,6}-[0-9]+)') || JIID=''
          echo "JIRAID=$JIID" >> "$GITHUB_OUTPUT"

      - id: output-jira-id
        if: ${{ steps.regex-find-jira-id.outputs.JIRAID != '' }}
        run: echo "JIRA_ID=${{ steps.regex-find-jira-id.outputs.JIRAID }}" >> "$GITHUB_ENV"

      - uses: octokit/request-action@21d174fc38ff59af9cf4d7e07347d29df6dbaa99 # pin@v2.3.0
        id: get_labels
        with:
          route: GET /repos/${{ github.repository }}/commits/${{ github.sha }}/pulls
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - run: |
          echo "PR_LABELS=${{ join(fromJSON(steps.get_labels.outputs.data)[0].labels.*.name) }}" >> "$GITHUB_ENV"
          echo "PR_NUMBER=${{ fromJson(steps.get_labels.outputs.data)[0].number }}" >> "$GITHUB_ENV"

      - id: check_dependabot
        run: echo "DEPENDABOT=${{ contains(env.PR_LABELS, 'dependencies') }}" >> "$GITHUB_ENV"

      - id: output-dependabot
        if: ${{ steps.regex-find-jira-id.outputs.match == '' && env.DEPENDABOT == 'true' }}
        run: echo "JIRA_ID=Dependabot" >> "$GITHUB_ENV"

      - run: npm install @octokit/app@v13.1.8

      - name: Generate Token
        uses: felleslosninger/github-actions/github-app-token@e8db52bf0bd0f3b1412b89c7039403eec3ebabd7 #pin@v0.7.2
        id: token
        with:
          app-id: ${{ secrets.DIGDIR_PLATFORM_CI_APP_ID }}
          private-key: ${{ secrets.DIGDIR_PLATFORM_CI_APP_PRIVATE_KEY }}
          installation-id: ${{ secrets.DIGDIR_PLATFORM_CI_APP_INSTALLATION_ID }}
          repository: ${{ inputs.kubernetes-repo }}

      - name: "update Kubernetes for new version of image ${{env.IMAGE-NAME}} (Dependabot)"
        if: ${{ env.DEPENDABOT == 'true' }}
        uses: peter-evans/repository-dispatch@ff45666b9427631e3450c54a1bcbee4d9ff4d7c0
        with:
          token: ${{ steps.token.outputs.token }}
          event-type: ${{ inputs.kubernetes-repo-event }}
          repository: "felleslosninger/${{ inputs.kubernetes-repo }}"
          client-payload: '{"image-name": "${{env.IMAGE-NAME}}","image": "${{env.IMAGE-NAME}}:${{inputs.image-version}}@${{inputs.image-digest}}","version":"${{inputs.image-version}}","application-name":"${{env.APPLICATION-NAME}}","jira-id":"${{env.JIRA_ID}}","actor":"${{github.event.pusher.name }}","pr-number":"${{ env.PR_NUMBER }}","pr-labels":"${{ env.PR_LABELS }}","sha":"${{ github.sha }}","repository":"${{ github.repository }}" }'

      - name: "update Kubernetes for new version of image ${{env.IMAGE-NAME}}"
        if: ${{ env.DEPENDABOT == 'false' }}
        uses: peter-evans/repository-dispatch@ff45666b9427631e3450c54a1bcbee4d9ff4d7c0
        with:
          token: ${{ steps.token.outputs.token }}
          event-type: ${{ inputs.kubernetes-repo-event }}
          repository: "felleslosninger/${{ inputs.kubernetes-repo }}"
          client-payload: '{"image-name": "${{env.IMAGE-NAME}}","image": "${{env.IMAGE-NAME}}:${{inputs.image-version}}@${{inputs.image-digest}}","version":"${{inputs.image-version}}","application-name":"${{env.APPLICATION-NAME}}","jira-id":"${{env.JIRA_ID}}","author":${{ toJSON(github.event.head_commit.author) }},"pr-number":"${{ env.PR_NUMBER }}","pr-labels":"${{ env.PR_LABELS }}","sha":"${{ github.sha }}","repository":"${{ github.repository }}" }'

  notify-on-errors:
    runs-on: ubuntu-latest
    needs: [update-version]
    if: always() && contains(needs.*.result, 'failure')
    strategy:
      matrix:
        slack-channel: ["${{ inputs.slack-channel-id }}", "C05G4B8R2GG"]
    steps:
      - name: Send Slack notification
        uses: felleslosninger/github-actions/send-slack-notification@e8db52bf0bd0f3b1412b89c7039403eec3ebabd7 #pin@v0.7.2
        with:
          slack-channel-id: ${{ matrix.slack-channel }}
          slack-bot-token: ${{ secrets.SLACK_CICD_NOTIFICATION_TOKEN }}
          failed: "true"
