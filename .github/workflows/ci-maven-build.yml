name: Maven build java

on:
  workflow_call:
    inputs:
      java-version:
        description: Main version of java
        default: "11"
        required: false
        type: string
      setup-npm-auth:
        description: Configure private NPM registry authentication
        default: false
        required: false
        type: boolean
      application-path:
        default: "./"
        required: false
        type: string


jobs:
  verify-pull-request-title:
    if: ${{ github.event_name == 'pull_request'}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # pin@v7.0.1
        with:
          script: |
            const REGEX = new RegExp("^[^â€¦]+$");  // Title must match this regex
            const MIN_LENGTH = 10;                 // Min length of the title
            const MAX_LENGTH = 100;                // Max length of the title (-1 is no max)
            const ALLOWED_PREFIXES = ['Bump','ID-','MIN-','PBLEID-','MP-','KRR-','PF-','AOS-','SP-','EIN-'];          // Title must start with one of these prefixes
            const PREFIX_CASE_SENSITIVE = false;  // Whether the prefix is case sensitive

            const validateTitlePrefix = (title, prefix) =>
              PREFIX_CASE_SENSITIVE
                ? title.startsWith(prefix)
                : title.toLowerCase().startsWith(prefix.toLowerCase());

            const { title } = context.payload.pull_request;
            if (!REGEX.test(title)) {
              core.setFailed(
                `Pull Request title "${title}" failed to match regex - ${REGEX}`
              );
              return;
            }

            if (title.length < MIN_LENGTH) {
              core.setFailed(
                `Pull Request title "${title}" is smaller than the minimum length - ${MIN_LENGTH}`
              );
              return;
            }

            if (MAX_LENGTH > 0 && title.length > MAX_LENGTH) {
              core.setFailed(
                `Pull Request title "${title}" is greater than the maximum length - ${MAX_LENGTH}`
              );
              return;
            }

            core.info(`Allowed Prefixes: ${ALLOWED_PREFIXES}`);
            if (
              ALLOWED_PREFIXES.length &&
              !ALLOWED_PREFIXES.some((prefix) => validateTitlePrefix(title, prefix))
            ) {
              core.setFailed(
                `Pull Request title "${title}" did not start with any of the required prefixes - ${ALLOWED_PREFIXES}`
              );
              return;
            }

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # pin@v4.2.1

      - name: Check if YAML files exist
        id: yaml-files-exists
        run: |
          if [ -f "${{ inputs.application-path }}src/main/resources/application*.y*ml" ]; then
            echo "file-exists=true" >> "$GITHUB_OUTPUT"
            echo "- \`${{ inputs.application-path }}src/main/resources/application*.y*ml\` file exists :white_check_mark:" >> "$GITHUB_STEP_SUMMARY"            
          else
            echo "file-exists=false" >> "$GITHUB_OUTPUT"
            {
              echo "- \`${{ inputs.application-path }}src/main/resources/application*.y*ml\` file exists :x:"
              echo "  - Skipping yamllint"
            } >> "$GITHUB_STEP_SUMMARY"
          fi

      - name: Run yamllint
        if: steps.yaml-files-exists.outputs.file_exists == 'true'
        uses: ibiqlik/action-yamllint@2576378a8e339169678f9939646ee3ee325e845c # pin@v3.1.1
        with:
          file_or_dir: ${{ inputs.application-path }}src/main/resources/application*.y*ml
          config_data: |
            extends: default
            rules:
              empty-lines: disable
              line-length:
                max: 150
                level: warning

      - name: Set up JDK ${{ inputs.java-version }}
        uses: actions/setup-java@b36c23c0d998641eff861008f374ee103c25ac73 # pin@v4.4.0
        with:
          distribution: "liberica"
          java-version: ${{ inputs.java-version }}

      - name: Cache Maven packages
        uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a # pin@v4.1.2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - uses: s4u/maven-settings-action@7802f6aec16c9098b4798ad1f1d8ac75198194bd # pin@v3.0.0
        with:
          servers: |
            [{
                "id": "github-oidc-sdk",
                "username": "${{ secrets.MAVEN_USER }}",
                "password": "${{ secrets.MAVEN_PASSWORD }}"
            },
            {
                "id": "github",
                "username": "${{ secrets.MAVEN_USER }}",
                "password": "${{ secrets.MAVEN_PASSWORD }}"
            }]


      - name: Configure private NPM registry authentication
        if: ${{ inputs.setup-npm-auth == true }}
        uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # pin@v4.2.0
        with:
          node-version: '20.x'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@felleslosninger'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build with Maven
        run: mvn -B test
