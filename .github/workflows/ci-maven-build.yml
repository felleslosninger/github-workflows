name: Maven build java

on:
  workflow_call:
    inputs:
      java-version:
        description: Main version of java
        default: "11"
        required: false
        type: string
      setup-npm-auth:
        description: Configure private NPM registry authentication
        default: false
        required: false
        type: boolean
      application-path:
        default: "./"
        required: false
        type: string
      cache-path:
        default: "**/pom.xml"
        required: false
        type: string
      maven-lifecycle:
        description: 'Maven lifecycle phase (test, package, verify, install)'
        type: string
        required: false
        default: 'test'


jobs:
  verify-pull-request-title:
    if: ${{ github.event_name == 'pull_request'}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # pin@v8.0.0
        with:
          script: |
            const REGEX = new RegExp("^[^â€¦]+$");  // Title must match this regex
            const MIN_LENGTH = 10;                 // Min length of the title
            const MAX_LENGTH = 100;                // Max length of the title (-1 is no max)
            const ALLOWED_PREFIXES = ['Bump','ID-','MIN-','PBLEID-','MP-','KRR-','PF-','AOS-','SP-','EIN-','EUW-','MOVE-'];          // Title must start with one of these prefixes
            const PREFIX_CASE_SENSITIVE = false;  // Whether the prefix is case sensitive

            const validateTitlePrefix = (title, prefix) =>
              PREFIX_CASE_SENSITIVE
                ? title.startsWith(prefix)
                : title.toLowerCase().startsWith(prefix.toLowerCase());

            const { title } = context.payload.pull_request;
            if (!REGEX.test(title)) {
              core.setFailed(
                `Pull Request title "${title}" failed to match regex - ${REGEX}`
              );
              return;
            }

            if (title.length < MIN_LENGTH) {
              core.setFailed(
                `Pull Request title "${title}" is smaller than the minimum length - ${MIN_LENGTH}`
              );
              return;
            }

            if (MAX_LENGTH > 0 && title.length > MAX_LENGTH) {
              core.setFailed(
                `Pull Request title "${title}" is greater than the maximum length - ${MAX_LENGTH}`
              );
              return;
            }

            core.info(`Allowed Prefixes: ${ALLOWED_PREFIXES}`);
            if (
              ALLOWED_PREFIXES.length &&
              !ALLOWED_PREFIXES.some((prefix) => validateTitlePrefix(title, prefix))
            ) {
              core.setFailed(
                `Pull Request title "${title}" did not start with any of the required prefixes - ${ALLOWED_PREFIXES}`
              );
              return;
            }

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # pin@v5.0.0

      - name: Set up JDK ${{ inputs.java-version }}
        uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165 # pin@v5.0.0
        with:
          distribution: "liberica"
          java-version: ${{ inputs.java-version }}
          cache: maven
          cache-dependency-path: ${{ inputs.cache-path }}

      - uses: s4u/maven-settings-action@894661b3ddae382f1ae8edbeab60987e08cf0788 # pin@v4.0.0
        with:
          servers: |
            [{
                "id": "github-oidc-sdk",
                "username": "${{ secrets.MAVEN_USER }}",
                "password": "${{ secrets.MAVEN_PASSWORD }}"
            },
            {
                "id": "github",
                "username": "${{ secrets.MAVEN_USER }}",
                "password": "${{ secrets.MAVEN_PASSWORD }}"
            }]

      - name: Configure private NPM registry authentication
        if: ${{ inputs.setup-npm-auth == true }}
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # pin@v5.0.0
        with:
          node-version: '20.x'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@felleslosninger'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run mvn ${{ inputs.maven-lifecycle }}
        run: |
          LIFECYCLE="${{ inputs.maven-lifecycle }}"
          case "$LIFECYCLE" in
            test|package|verify|install)
              mvn -B "$LIFECYCLE"
              ;;
            *)
              echo "Invalid Maven lifecycle: $LIFECYCLE"
              exit 1
              ;;
          esac
