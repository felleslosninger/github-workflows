name: Build/publish Docker image for React app

on:
  workflow_call:
    inputs:
      image-name:
        description: Name of Docker image
        required: false
        type: string
      slack-channel-id:
        description: Team channel id
        default: ""
        required: false
        type: string

jobs:
  build-publish-image:
    runs-on: ubuntu-latest
    outputs:
      image-version: ${{ steps.tag_image.outputs.tag }}
      image-digest: ${{ steps.tag_image.outputs.digest }}
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Install Pack CLI
        run: |
          PACK_VERSION=0.21.0
          OS=$(uname -s)
          ARCH=$(uname -m)
          curl -sSL "https://github.com/buildpacks/pack/releases/download/v${PACK_VERSION}/pack-v${PACK_VERSION}-${OS}-${ARCH}.tgz" | sudo tar -C /usr/local/bin/ --no-same-owner -xzv pack

      - name: Build Docker image with Paketo
        run: pack build ${{ inputs.image-name }}:${{ github.sha }} --builder paketo-buildpacks/nodejs

      - name: Tag Docker image
        id: tag_image
        run: |
          echo "tag=${{ inputs.image-name }}:${{ github.sha }}" >> "$GITHUB_ENV"
          echo "digest=$(docker inspect --format='{{index .RepoDigests 0}}' ${{ inputs.image-name }}:${{ github.sha }})" >> "$GITHUB_ENV"

      - name: Log in to Docker registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image to registry
        run: docker push ${{ steps.tag_image.outputs.tag }}

  notify-on-errors:
    needs: [build-publish-image]
    if: ${{ always() && contains(needs.build-publish-image.result, 'failure') }}
    runs-on: ubuntu-latest
    steps:
      - name: Send Slack notification on failure
        uses: ./.github/workflows/misc-send-notification-on-workflow-errors.yml
        with:
          slack-channel-id: ${{ inputs.slack-channel-id }}
          secrets: inherit
