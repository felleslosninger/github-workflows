name: Maven build java

on:
  workflow_call:
    inputs:
      java-version:
        description: Main version of java
        default: '11'
        required: false
        type: string
      sbom-path:
        description: Target directory for SBOM generation
        default: ./target/
        required: false
        type: string
      setup-npm-auth:
        description: Configure private NPM registry authentication
        default: false
        required: false
        type: boolean
      cache-path:
        default: "**/pom.xml"
        required: false
        type: string
      application-path:
        default: "./"
        required: false
        type: string

jobs:
  verify-pull-request-title:
    if: ${{ github.event_name == 'pull_request'}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # pin@v7.0.1
        with:
          script: |
            const REGEX = new RegExp("^[^â€¦]+$");  // Title must match this regex
            const MIN_LENGTH = 10;                 // Min length of the title
            const MAX_LENGTH = 100;                // Max length of the title (-1 is no max)
            const ALLOWED_PREFIXES = ['Bump','ID-','MIN-','PBLEID-','MP-','KRR-','PF-','AOS-','SP-','EUW-','MOVE-'];         // Title must start with one of these prefixes
            const PREFIX_CASE_SENSITIVE = false;  // Whether the prefix is case sensitive

            const validateTitlePrefix = (title, prefix) =>
              PREFIX_CASE_SENSITIVE
                ? title.startsWith(prefix)
                : title.toLowerCase().startsWith(prefix.toLowerCase());

            const { title } = context.payload.pull_request;
            if (!REGEX.test(title)) {
              core.setFailed(
                `Pull Request title "${title}" failed to match regex - ${REGEX}`
              );
              return;
            }

            if (title.length < MIN_LENGTH) {
              core.setFailed(
                `Pull Request title "${title}" is smaller than the minimum length - ${MIN_LENGTH}`
              );
              return;
            }

            if (MAX_LENGTH > 0 && title.length > MAX_LENGTH) {
              core.setFailed(
                `Pull Request title "${title}" is greater than the maximum length - ${MAX_LENGTH}`
              );
              return;
            }

            core.info(`Allowed Prefixes: ${ALLOWED_PREFIXES}`);
            if (
              ALLOWED_PREFIXES.length &&
              !ALLOWED_PREFIXES.some((prefix) => validateTitlePrefix(title, prefix))
            ) {
              core.setFailed(
                `Pull Request title "${title}" did not start with any of the required prefixes - ${ALLOWED_PREFIXES}`
              );
              return;
            }

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # pin@v4.2.2
      - name: Set up JDK ${{ inputs.java-version }}
        uses: actions/setup-java@3a4f6e1af504cf6a31855fa899c6aa5355ba6c12 # pin@v4.7.0
        with:
          distribution: "liberica"
          java-version: ${{ inputs.java-version }}
          cache: maven
          cache-dependency-path: ${{ inputs.cache-path }}

      - name: Configure private NPM registry authentication
        if: ${{ inputs.setup-npm-auth == true }}
        uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # pin@v4.2.0
        with:
          node-version: '20.x'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@felleslosninger'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set m2 settings to read organization packages
        run: |
          mkdir -p ~/.m2
          echo "<settings><servers><server><id>github</id><username>${{ secrets.GH_PACKAGES_READ_USER }}</username><password>${{ secrets.GH_PACKAGES_READ_PAT }}</password></server></servers></settings>" > ~/.m2/settings.xml

      - name: Build with Maven
        run: |
          mvn -B clean install --update-snapshots

      - name: Set trivyignore env if file exists
        id: set-trivyignore-path
        run: |
          if [ -f "${{ inputs.application-path }}.trivyignore" ]; then
            trivyignore_path=${{ inputs.application-path }}.trivyignore
            echo "trivyignore-path=$trivyignore_path" >> "$GITHUB_OUTPUT"
            echo "- Trivy ignore path: $trivyignore_path" >> "$GITHUB_STEP_SUMMARY"
          fi

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@18f2510ee396bbf400402947b394f2dd8c87dbb0 # pin@v0.29.0
        id: trivy-maven
        env:
          TRIVY_DB_REPOSITORY: ghcr.io/aquasecurity/trivy-db:2,public.ecr.aws/aquasecurity/trivy-db:2
          TRIVY_JAVA_DB_REPOSITORY: ghcr.io/aquasecurity/trivy-java-db:1,public.ecr.aws/aquasecurity/trivy-java-db:1
        with:
          scan-type: 'fs'
          scan-ref: '${{ inputs.application-path }}'
          exit-code: "1"
          severity: "CRITICAL,HIGH"
          trivyignores: ${{ steps.set-trivyignore-path.outputs.trivyignore-path }}

      - uses: anchore/sbom-action@7b36ad622f042cab6f59a75c2ac24ccb256e9b45 # pin@v0.20.4
        with:
          path: ${{ inputs.sbom-path }}
