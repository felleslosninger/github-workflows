name: Build k6-docker

on:
  workflow_call:
    inputs:
      image-name:
        description: Name of Docker image
        required: false
        type: string
      k6-folder:
        description: Folder with k6-tests
        default: "k6-load-tests"
        required: false
        type: string
      k6-libs-folder:
        description: Folder with k6-tests
        default: "libs"
        required: false
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      REPOSITORY-NAME: ${{ github.event.repository.name }}
      REGISTRY_URL: my-local-registry
      DOCKLE_HOST: "unix:///var/run/docker.sock"
    steps:
      - name: Set imagetag as env variable
        run: echo "IMAGETAG=$(date +'%Y-%m-%d-%H%M')-${GITHUB_SHA::8}" >> "$GITHUB_ENV"

      - name: Set IMAGE-NAME env variable
        run: |
          echo "IMAGE-NAME=${{ env.REGISTRY_URL }}/${{ inputs.image-name || env.REPOSITORY-NAME }}" >> "$GITHUB_ENV"

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # pin@v5.0.0

      - name: Copy k6-tests to docker temp
        run: |
          cp -R ${{ inputs.k6-folder }}/* docker/k6-tests/
          mkdir docker/${{ inputs.k6-libs-folder }}
          cp -R ${{ inputs.k6-libs-folder }}/* docker/${{ inputs.k6-libs-folder }}/

      - name: Build the tagged Docker image
        run: docker build --tag ${{env.IMAGE-NAME}}:${{env.IMAGETAG}} docker/

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@18f2510ee396bbf400402947b394f2dd8c87dbb0 # pin@v0.29.0
        id: trivy-primary
        env:
          TRIVY_DB_REPOSITORY: ghcr.io/aquasecurity/trivy-db:2,public.ecr.aws/aquasecurity/trivy-db:2
          TRIVY_JAVA_DB_REPOSITORY: ghcr.io/aquasecurity/trivy-java-db:1,public.ecr.aws/aquasecurity/trivy-java-db:1
        with:
          image-ref: ${{env.IMAGE-NAME}}:${{env.IMAGETAG}}
          exit-code: "1"
          severity: "CRITICAL,HIGH"

