name: Container scan

on:
  workflow_call:
    inputs:
      image-name:
        description: Name of Docker image
        required: false
        type: string
      image-pack:
        description: Docker image pack of builder-jammy-tiny, builder-jammy-base or builder-jammy-full
        default: builder-jammy-tiny
        required: false
        type: string
      registry-url:
        description: Image/Container Registery URL
        default: "my-local-registery"
        required: false
        type: string
      java-version:
        description: Main version of java
        default: "11"
        required: false
        type: string
      container-scan-offline-mode:
        description: Container-scan is default download updated CVE definitions via Trivy, enable offline on download problems
        default: false
        type: boolean

jobs:
  build-and-scan-image:
    runs-on: ubuntu-latest
    env:
      REPOSITORY-NAME: ${{ github.event.repository.name }}
      DOCKLE_HOST: "unix:///var/run/docker.sock"
      TRIVY_OFFLINE_SCAN: ${{ inputs.container-scan-offline-mode }}
    steps:
      - name: Set image tag
        id: set-image-tag
        run: echo "image-tag=$(date +'%Y-%m-%d-%H%M')-${GITHUB_SHA::8}" >> "$GITHUB_OUTPUT"

      - name: Set image name
        id: set-image-name
        run: |
          echo "image-name=${{ inputs.registry-url }}/${{ inputs.image-name || env.REPOSITORY-NAME }}" >> "$GITHUB_OUTPUT"

      - name: Checkout
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # pin@v4.1.6

      - name: Set up JDK ${{ inputs.java-version }}
        uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9 # pin@v4.2.1
        with:
          distribution: "liberica"
          java-version: ${{ inputs.java-version }}

      - name: Cache Maven packages
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # pin@v4.0.2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Maven environment setup
        uses: s4u/maven-settings-action@7802f6aec16c9098b4798ad1f1d8ac75198194bd # pin@v3.0.0
        with:
          servers: |
            [{
                "id": "github-oidc-sdk",
                "username": "${{ secrets.MAVEN_USER }}",
                "password": "${{ secrets.MAVEN_PASSWORD }}"
            },
            {
              "id": "github",
              "username": "${{ secrets.MAVEN_USER }}",
              "password": "${{ secrets.MAVEN_PASSWORD }}"
            }]

      - name: Build image with Maven (skips tests)
        run: mvn -DskipTests -B spring-boot:build-image --file pom.xml -Dspring-boot.build-image.imageName=${{ steps.set-image-name.outputs.image-name }}:${{ steps.set-image-tag.outputs.image-tag }} -Dspring-boot.build-image.builder=paketobuildpacks/${{ inputs.image-pack }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@d710430a6722f083d3b36b8339ff66b32f22ee55 # pin@v0.19.0
        with:
          image-ref: "${{ steps.set-image-name.outputs.image-name }}:${{ steps.set-image-tag.outputs.image-tag }}"
          exit-code: "1"
          severity: "CRITICAL,HIGH"
