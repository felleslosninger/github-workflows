name: Container scan

on:
  workflow_call:
    inputs:
      image-name:
        description: Name of Docker image
        required: false
        type: string

      image-pack:
        description: Docker image pack of builder-jammy-tiny, builder-jammy-base or builder-jammy-full
        default: builder-jammy-tiny
        required: false
        type: string

      registry-url:
        description: Image/Container Registery URL
        default: "my-local-registery"
        required: false
        type: string

      java-version:
        description: Main version of java
        default: "11"
        required: false
        type: string

      container-scan-offline-mode:
        description: Container-scan is default download updated CVE definitions via Trivy, enable offline on download problems
        default: false
        type: boolean

      native:
        description: Build native image
        required: false
        type: boolean
        default: false

jobs:
  build-and-scan-image:
    runs-on: ubuntu-latest
    env:
      REPOSITORY-NAME: ${{ github.event.repository.name }}
      DOCKLE_HOST: "unix:///var/run/docker.sock"
      #TRIVY_TIMEOUT: "15m"
    steps:
      - name: Set imagetag as env variable
        run: echo "IMAGETAG=$(date +'%Y-%m-%d-%H%M')-${GITHUB_SHA::8}" >> "$GITHUB_ENV"

      - name: Set IMAGE-NAME env variable
        run: |
          echo "IMAGE-NAME=${{ inputs.registry-url }}/${{ inputs.image-name || env.REPOSITORY-NAME }}" >> "$GITHUB_ENV"

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # pin@v5.0.0

      - name: Cache Maven packages
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # pin@v4.2.4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - uses: s4u/maven-settings-action@894661b3ddae382f1ae8edbeab60987e08cf0788 # pin@v4.0.0
        with:
          servers: |
            [{
              "id": "github",
              "username": "${{ secrets.MAVEN_USER }}",
              "password": "${{ secrets.MAVEN_PASSWORD }}"
            }]

      - name: Install pack
        run: |
          #!/usr/bin/env bash
          set -euo pipefail
          echo "Installing pack ${PACK_VERSION}"
          mkdir -p /usr/local/bin
          curl \
            --location \
            --show-error \
            --silent \
            "https://github.com/buildpacks/pack/releases/download/v${PACK_VERSION}/pack-v${PACK_VERSION}-linux.tgz" \
          | sudo tar -C /usr/local/bin --no-same-owner -xzv pack
        env:
          PACK_VERSION: 0.32.1

      - name: Build native image with Maven/Quarkus
        if: inputs.native == true
        run: |
          pack build ${{env.IMAGE-NAME}}:${{env.IMAGETAG}} \
            --path . \
            --buildpack docker://paketobuildpacks/quarkus \
            --buildpack docker://paketobuildpacks/java-native-image \
            --builder paketobuildpacks/${{ inputs.image-pack }} \
            --volume "${HOME}/.m2:/home/cnb/.m2:rw" \
            --env BP_JVM_VERSION="${{ inputs.java-version }}" \
            --env BP_MAVEN_POM_FILE="./pom.xml" \
            --env BP_NATIVE_IMAGE="true" \
            --env LANG="C.UTF-8" \
            --creation-time now

      - name: Build image with Maven/Quarkus
        if: inputs.native == false
        run: |
          pack build ${{env.IMAGE-NAME}}:${{env.IMAGETAG}} \
            --path . \
            --buildpack docker://paketobuildpacks/quarkus \
            --buildpack docker://paketobuildpacks/java \
            --builder paketobuildpacks/${{ inputs.image-pack }} \
            --volume "${HOME}/.m2:/home/cnb/.m2:rw" \
            --env BP_JVM_VERSION="${{ inputs.java-version }}" \
            --env BP_MAVEN_POM_FILE="./pom.xml" \
            --creation-time now

      - name: Create SBOM artifact-name
        id: sbom-name
        run: |
          SBOM_NAME=$(echo ${{env.IMAGE-NAME}} | tr '/' '-')
          echo "SBOM_ARTIFACT_ID=$SBOM_NAME" >> "$GITHUB_OUTPUT"

      - uses: anchore/sbom-action@d8a2c0130026bf585de5c176ab8f7ce62d75bf04 # pin@v0.20.7
        with:
          image: ${{env.IMAGE-NAME}}:${{env.IMAGETAG}}
          artifact-name: sbom-${{steps.sbom-name.outputs.SBOM_ARTIFACT_ID}}-${{env.IMAGETAG}}.spdx

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8 # pin@v0.33.1
        id: trivy-primary
        env:
          TRIVY_DB_REPOSITORY: ghcr.io/aquasecurity/trivy-db:2,public.ecr.aws/aquasecurity/trivy-db:2
          TRIVY_JAVA_DB_REPOSITORY: ghcr.io/aquasecurity/trivy-java-db:1,public.ecr.aws/aquasecurity/trivy-java-db:1
        with:
          image-ref: ${{env.IMAGE-NAME}}:${{env.IMAGETAG}}
          exit-code: "1"
          severity: "CRITICAL,HIGH"
